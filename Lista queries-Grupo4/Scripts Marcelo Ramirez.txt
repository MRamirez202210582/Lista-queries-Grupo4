Relational Database Queries
Marcelo Ramirez
Consulta para obtener la cantidad de miembros y nombre de la comunidad para cada curso
SELECT Curso.nombreCurso, COUNT(AlumnoXComunidad.idAlumno) AS CantidadMiembros,nombreComunidad
FROM AlumnoXComunidad
JOIN Comunidad ON AlumnoXComunidad.idComunidad = Comunidad.idComunidad
JOIN AlumnoXCursos ON AlumnoXComunidad.idAlumno = AlumnoXCursos.idAlumno
JOIN Curso ON AlumnoXCursos.idCurso = Curso.idCurso
GROUP BY Curso.nombreCurso,nombreComunidad;

Consulta de registro curso atraves de un trigger
create trigger registroCurso
on curso
after insert
as
begin
	if exists(select * from inserted)
	begin
	insert into Curso(nombreCurso)
	select nombreCurso from inserted;
	print  'Curso registrado ' + cast(getdate() as varchar(50))
	end
end;
insert into Curso(nombreCurso)
values('web developer')

Creación de un procedimiento almacenado para obtener alumnos por curso
create procedure palumnoxcurso
@nombreCurso varchar(50)
as
begin
	if @nombreCurso=''
		begin
			select ac.nombreCurso,a.nombreAlumno
			from Alumno a inner join AlumnoXCursos ac on
			a.idAlumno=ac.idAlumno
			group by ac.nombreCurso,a.nombreAlumno
		end
	else
		begin
			select ac.nombreCurso,a.nombreAlumno
			from Alumno a inner join AlumnoXCursos ac on
			a.idAlumno=ac.idAlumno
			where ac.nombreCurso=@nombreCurso
			group by ac.nombreCurso,a.nombreAlumno
		end
end
go
exec palumnoxcurso 'Principios de Economia'


Non-Relational Database Queries
Marcelo Ramirez
Consulta con $and - Buscar eventos de un curso específico que estén en estado activo:
db.Evento.find({
  $and: [
    { "idCurso": ObjectId("654fb30623fbcecefdd2c66a") },
    { "estado": "Activo" }
  ]
});

Listar los documentos del codigo instituto donde su tipo de institución es Escuela
db.AlumnoXCursos.aggregate([
{
        $lookup: {
       from: "CursoXHerramienta",
      localField: "idCurso",
       foreignField: "idCurso",
      as: "curso_herramienta"
    }
  },
 {
     $match: { "curso_herramienta.idHerramienta": ObjectId("654fba760d82dae49bba5a18") }
  }
 ])

Obtener la cantidad de alumnos por curso
db.AlumnoXCursos.aggregate([
  { $group: { _id: "$nombreCurso", cantidadAlumnos: { $sum: 1 } } }
]);
